%%  cascade _base::layout { title => "Show Node",
%%      sb_active => 'dashboard'
%%  }

%% override panel -> {
    <nav style="margin-top: 2em;" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="[% $c.url_for( 'dashboard' ) %]">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="[% $c.url_for( 'list_nodes' ) %]">Nodes</a></li>
            <li class="breadcrumb-item active" aria-current="page">[% $node.hostname %]</li>
        </ol>
    </nav>

%%  include 'dashboard/_panels/nodes_table.tx' { nodes => [ $node ] }

    <h4 style="margin-top: 2em" class="h4">Configure Node For Network</h4>
    <p>Once a node is configured in MeshMage, you'll need to configure the
    actual server or personal computer to connect to the network.  Select the
    type of node this is to get configure the machine to connect to the network.</p>


%%  if ( $pending ) {
    <div style="margin-top: 2em" class="alert alert-success" role="alert">
        <p>Your configuration is being built, it should be available at the following
        link in a few seconds.</p>

        <a _target="blank" href="[% $c.url_for( '/download/' ~ $pending ) %]">Download Configuration</a>
    </div>
%%  }


<div class="accordion" id="accordionExample">
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingOne">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
        Linux - Automatic Deployment &nbsp; <em><small>(Remote Server w/ SSH access)</small></em>
      </button>
    </h2>
    <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <p>Automatic deployment is supported on Linux machines that can be accessed over SSH from this server.  The next
        page will allow you to choose an SSH Key and IP address for the connection to automatically configure this
        node.</p>

        <a title="Automatically Deploy Node" href="[% $c.url_for( 'deploy_automatic', {'node_id', $node.id} ) %]" 
            class="btn btn-primary">Let's Do It</a>
        
      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingTwo">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
        macOS Intel &nbsp; <em><small>Personal Computer</small></em>
      </button>
    </h2>
    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <p>To configure your macOS Laptop or Desktop, a bundle of files will be provided and instructions to set up the machine.
        Click the button below to start building the bundle, once it is complete, the build button will be replaced with
        a link to download and setup.</p>
        <form method="post" action="[% $c.url_for( 'deploy_macos' ) %]">
            <input type="hidden" name="node_id" value="[% $node.id %]" />
            <input type="submit" class="btn btn-primary" value="Create Bundle" />
        </form>

      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingThree">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
        macOS M1 &nbsp; <em><small>Personal Computer</small></em>
      </button>
    </h2>
    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingFour">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
        Windows &nbsp; <em><small>Personal Computer</small></em>
      </button>
    </h2>
    <div id="collapseFour" class="accordion-collapse collapse" aria-labelledby="headingFour" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingFive">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
        Manual &nbsp; <em><small>(You Decide)</small></em>
      </button>
    </h2>
    <div id="collapseFive" class="accordion-collapse collapse" aria-labelledby="headingFive" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <p>Manual deployment gives you the keys, configuration file, and Nebula binary to configure any kind of node
        that Nebula supports.  The next page will give you access to the keyfiles and configuration file, as well as
        allow you to download Nebula for your platform.</p>

        <a title="Manually Deploy Node" href="[% $c.url_for( 'deploy_manual', {'node_id', $node.id} ) %]" 
            class="btn btn-primary">Let's Do It</a>
      </div>
    </div>
  </div>
</div>

    <h2 style="margin-top: 2em" class="h2">Jobs</h2>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>State</th>
            </tr>
        </thead>
        <tbody>
%%          while $jobs.next() -> $job {
            <tr>
                <td><a href="/minion/jobs?id=[% $job.id %]">[% $job.id %]</a></td>
                <td>[% $job.task %]</td>
                <td>[% $job.state %]</td>
            </tr>
%%          }
        </tbody>
    </table>

%% }
