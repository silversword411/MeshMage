---
- name: Create secret for cookie encryption.
  set_fact:
    meshmage_secret: "{{ lookup('password', '/dev/null chars=hexdigits length=40') }}"
  when: meshmage_secret is undefined

- name: Create postgres password.
  set_fact:
    postgresql_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"
  when: postgresql_password is undefined

- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest
    update_cache: yes

- name: Install packages for key exchange.
  apt:
    name: [
      'apt-transport-https',
      'ca-certificates',
      'curl',
      'gnupg',
      'lsb-release'
    ]
    state: present

- name: Add the ansible key.
  ansible.builtin.apt_key:
    keyserver: keyserver.ubuntu.com
    id: 93C4A3FD7BB9C367

- name: Install ansible.list for apt.
  copy:
    dest: /etc/apt/sources.list.d/ansible.list
    content: "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main"
    owner: root
    group: root
    mode: 0755

- name: Install packages
  apt:
    name: [
      'ansible',
      'git',
      'build-essential',
      'libpq-dev',
      'libssl-dev',
      'libz-dev',
      'cpanminus',
      'liblocal-lib-perl',
      'kitty-terminfo',
    ]
    state: present

- name: Create meshmage user
  user:
    name: meshmage
    shell: /bin/bash
    comment: MeshMage User Account

- name: Create ~meshmage/.ssh
  file:
    state: directory
    path: /home/meshmage/.ssh
    owner: meshmage
    group: meshmage
    mode: 0700

- name: Create ~meshmage/.ssh/authorized_keys from ~root
  copy:
    dest: /home/meshmage/.ssh/authorized_keys
    src: /root/.ssh/authorized_keys
    remote_src: true
    owner: meshmage
    group: meshmage
    mode: 0600

- name: Setup local::lib for meshmage.
  lineinfile:
    path: /home/meshmage/.bashrc
    line: 'eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)"'
    create: yes

- name: Install perl modules (up to 3 tries)
  shell: cpanm App::plx App::opan App::Dex Carton Dist::Zilla
  args:
    chdir: /home/meshmage
    executable: /bin/bash
  environment:
    PERL_MB_OPT: "--install_base \"/home/meshmage/perl5\""
    PERL_MM_OPT: "INSTALL_BASE=/home/meshmage/perl5"
    PERL5LIB: "/home/meshmage/perl5/lib/perl5"
    PATH: "/home/meshmage/perl5/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
  retries: 3
  register: result
  until: result.rc == 0
  become: true
  become_user: meshmage

- name: Checkout meshmage repo.
  shell: git clone https://github.com/symkat/MeshMage.git
  args:
    creates: /home/meshmage/MeshMage
    chdir: /home/meshmage
    executable: /bin/bash
  environment:
    GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
  become: true
  become_user: meshmage

- name: Build MeshMage::DB
  shell: dzil build
  args:
    chdir: /home/meshmage/MeshMage/DB
    executable: /bin/bash
  environment:
    PERL_MB_OPT: "--install_base \"/home/meshmage/perl5\""
    PERL_MM_OPT: "INSTALL_BASE=/home/meshmage/perl5"
    PERL5LIB: "/home/meshmage/perl5/lib/perl5"
    PATH: "/home/meshmage/perl5/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
  become: true
  become_user: meshmage

- name: Install MeshMage::DB
  shell: cpanm MeshMage-DB-1.tar.gz
  args:
    chdir: /home/meshmage/MeshMage/DB
    executable: /bin/bash
  environment:
    PERL_MB_OPT: "--install_base \"/home/meshmage/perl5\""
    PERL_MM_OPT: "INSTALL_BASE=/home/meshmage/perl5"
    PERL5LIB: "/home/meshmage/perl5/lib/perl5"
    PATH: "/home/meshmage/perl5/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
  retries: 3
  register: result
  until: result.rc == 0
  become: true
  become_user: meshmage

- name: Configure plx for MeshMage::Web
  shell: |
    plx --init
    plx --config libspec add 00tilde.ll $HOME/perl5
    plx --config libspec add 40dblib.dir ../DB/lib
    plx opan init
    plx opan add ../DB/MeshMage-DB-1.tar.gz
    plx opan merge
  args:
    creates: /home/meshmage/MeshMage/MeshMage/Web/.plx
    chdir: /home/meshmage/MeshMage/Web
    executable: /bin/bash
  environment:
    PERL_MB_OPT: "--install_base \"/home/meshmage/perl5\""
    PERL_MM_OPT: "INSTALL_BASE=/home/meshmage/perl5"
    PERL5LIB: "/home/meshmage/perl5/lib/perl5"
    PATH: "/home/meshmage/perl5/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
  become: true
  become_user: meshmage

- name: Install dependancies for MeshMage::Web
  shell: plx opan carton install
  args:
    chdir: /home/meshmage/MeshMage/Web
  environment:
    PERL_MB_OPT: "--install_base \"/home/meshmage/perl5\""
    PERL_MM_OPT: "INSTALL_BASE=/home/meshmage/perl5"
    PERL5LIB: "/home/meshmage/perl5/lib/perl5"
    PATH: "/home/meshmage/perl5/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
  retries: 3
  register: result
  until: result.rc == 0
  become: true
  become_user: meshmage

# Setup the databases

- name: Install Database Packages
  apt:
    name: [
      'postgresql-client',
      'postgresql-contrib',
      'postgresql',
      'python-psycopg2',
    ]
    state: present

- name: start postgresql
  service: name=postgresql state=started enabled=true

- name: Create PSQL user account.
  postgresql_user:
    name: "{{ postgresql_user }}"
    password: "{{ postgresql_password }}"
    state: present
  become_user: postgres
  become: true

- name: Create PSQL databases
  postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ postgresql_user }}"
    state: present
  become_user: postgres
  become: true
  with_items: "{{ postgresql_databases }}"
  register: postgresql_create_database

- name: Enable citext on meshmage DB
  postgresql_query:
    db: meshmage
    query: CREATE EXTENSION IF NOT EXISTS citext
  become_user: postgres
  become: true

- name: Check if Database DDL Exists
  stat:
    path: /home/meshmage/MeshMage/DB/share/ddl/_source/deploy/1/001-auto.yml
  register: db_ddl

- name: Write Database DDL
  shell: ./bin/meshmage-db-deploy write_ddl
  args:
    chdir: /home/meshmage/MeshMage/DB
  environment:
    PERL_MB_OPT: "--install_base \"/home/meshmage/perl5\""
    PERL_MM_OPT: "INSTALL_BASE=/home/meshmage/perl5"
    PERL5LIB: "/home/meshmage/perl5/lib/perl5"
    PATH: "/home/meshmage/perl5/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
  become: true
  become_user: meshmage
  when: db_ddl.stat.exists == false

- name: Install Database DDL
  shell: ./bin/meshmage-db-deploy install
  args:
    chdir: /home/meshmage/MeshMage/DB
  environment:
    PERL_MB_OPT: "--install_base \"/home/meshmage/perl5\""
    PERL_MM_OPT: "INSTALL_BASE=/home/meshmage/perl5"
    PERL5LIB: "/home/meshmage/perl5/lib/perl5"
    PATH: "/home/meshmage/perl5/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
  become: true
  become_user: meshmage
  when: db_ddl.stat.exists == false

- name: Install meshmage.yml file.
  template:
    src: "{{ role_path }}/templates/meshmage.yml.j2"
    dest: /home/meshmage/MeshMage/Web/meshmage.yml
    owner: meshmage
    group: meshmage
    mode: '0640'

- name: Install meshmage.service file.
  copy:
    dest: /etc/systemd/system/meshmage.service
    src: "{{ role_path }}/files/meshmage.service"
    owner: root
    group: root
    mode: 0644

- name: Install meshmage-worker.service file.
  copy:
    dest: /etc/systemd/system/meshmage-worker.service
    src: "{{ role_path }}/files/meshmage-worker.service"
    owner: root
    group: root
    mode: 0644

- name: Start MeshMage
  service:
    name: meshmage
    state: started
    enabled: true

- name: Start MeshMage-Worker
  service:
    name: meshmage-worker
    state: started
    enabled: true
